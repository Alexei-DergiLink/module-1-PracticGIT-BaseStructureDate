# ___________ ИСПОЛЬЗУЕТСЯ ДЛЯ СПИСКОВ КОТОРЫЕ МЫ НЕ ХОТИМ ИЗМЕНЯТЬ (ВООБЩЕ ТРОГАТЬ). _____________

#                                       *******  ДЛЯ ОМСКа - МОЖНО ВОЛОКОННЫЕ КОНСТАНТЫ ЗАПИСАТЬ?! **********


tuple_ = 1, 2, 3, 4 # Создал кортеж (вариант 1). Он выводится в круглых скобках в терминале
tuple_2 = (1, 2, 3, 4) # Создали кортеж (вариант 2).
tuple_3 = tuple([1, 2, 3, 4]) # Создали кортеж (вариант 3).
# tuple_ (кортеж) - это такая же коллекция как и список, но не изменяемая!!!
print(tuple_)
print(tuple_2)
print(tuple_3)
print()
print()
print(type(tuple_)) # относится к типу кортеж - проверка.
print(type(tuple_2))
print(type(tuple_3))
print()
print()
## ОСОБЕННОСТЬ КОРТЕЖА - НЕИЗМЕНЯЕМОСТЬ, УПОРЯДОЧЕННОСТЬ, ЭЛЕМЕНТЫ ВНУТРИ КОРТЕЖА МОГУТ БЫТЬ РАЗНЫМИ

tuple_4 = 1, 2, 3, True, "String" # кортеж может содержать разные элементы
print(tuple_4)
print(type(tuple_4))
print(tuple_4[4]) # В картеже можно обращаться по индексу элемента

##
# НЕЛЬЗЯ ИЗМЕНИТЬ ОБЪЕКТ В КАРТЕЖЕ !!!
# tuple_4[4] = "200" # (TypeError: 'tuple' object does not support item assignment) - Кортеж не поддерживает обращение по элементам
##

# КОРТЕЖЫ СЛУЖАТ ДЛЯ: 1. ДЛЯ НЕИЗМЕНЯЕМЫХ СПИСКОВ (ЧТОБЫ НЕ БОЯТЬСЯ, ЧТО ЧТО-ТО ТАМ ИЗМЕНИТСЯ). 2. ЗАНИМАЕТ МЕНЬШЕ МЕСТА ЧЕМ СПИСОК !!!
tuple_5 = 1, 2, 3, True, "String"
list_5 = [1, 2, 3, True, "String"]
print(tuple_5.__sizeof__()) # выводим размер кортежа (64)
print(list_5.__sizeof__()) # выводим размер списка, он больше чем кортеж! (88)

# Кортеж сам не изменяемый, но может хранить в себе изменяемые объекты !!!
tuple_6 = ([1, 2], 0)
print(tuple_6)
tuple_6[0][0] = 2 # обращаемся к единице (нулевой индекс строки, далее нулевой индекс кортежа, и присваиваем значение 2 вместо 1)
print(tuple_6) # изменил первое значение в списке
# КОРТЕЖ ХРАНИТ ССЫЛКИ НА ОБЪЕКТЫ. САМ НЕ ИЗМЕНЯЕМ! ОБЪЕКТЫ ВНУТРИ МОГУТ ИЗМЕНЯТЬСЯ!
# КОРТЕЖ ПОДДЕРЖИВАЕТ КОНКНЕТЕНАЦИЮ (операция сложения)
tuple_6 = ([1, 2], 0) + (1, 2)
print(tuple_6)
# КОРТЕЖ МОЖНО ЕЩЕ УМНОЖАТЬ
tuple_7 = (2, 5, 8) * 3
print(tuple_7)


















