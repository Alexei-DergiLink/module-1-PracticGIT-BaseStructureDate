# Динамическая типизация
# В Python тип хранится не в переменной, а в самом объекте. А сама переменная лишь ссылается на объект.
# В Python вообще в принципе все является объектами.
# ПЕРЕМЕННАЯ - это кусочек в памяти компьютера, которую берем чтобы что-то туда вложить и потом использовать.
name = "Alexei" # name - переменная; "Alexei" - тип данных в переменной. Текстовый тип - строка!
print (type(name)) # тип данных относится к строке так, как Alexei взято в "".
# Существует функция "id", которая служит для проверки нескольких переменных, пересекаются ли они ?! Или все же разные !!!
print (name, type(name)) # Вывод имя переменной и ее типа одновременно в строку (Alexei <class 'str'>).
name = 5 # далее переназначим тип данных в переменной "name"
print (name, type(name)) # при выводе получим, что "name" уже имеет целочисленное значение 5 и тип "int" (5 <class 'int'>)
name = 7.62 # присвоили переменной дробное число
print (name, type(name)) # получили тип данных с плавающей точкой "float" (7.62 <class 'float'>)
name = [1, 2] # присвоим значение списка данных
print (name, type(name)) # получили тип "список" ([1, 2] <class 'list'>)
# НЕЛЬЗЯ СКЛАДЫВАТЬ int и str к примеру!!! НЕОБХОДИМО СЛЕДИТЬ ЗА ТИПАМИ ДАННЫХ!!!

# ИНТЕРЕСНЫЕ ССЫЛКИ: https://www.youtube.com/watch?v=R4WF9xad_EI - 10 вопросов Python-разработчику



